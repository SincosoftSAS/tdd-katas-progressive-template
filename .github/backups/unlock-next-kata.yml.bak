name: Unlock Next Kata

on:
  repository_dispatch:
    types: [unlock-next-kata]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  unlock:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup GitHub labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🏷️  Ensuring required labels exist..."
          
          # Create labels if they don't exist (ignore errors if they already exist)
          gh label create "kata" --color "0052cc" --description "TDD Kata related" 2>/dev/null || echo "Label 'kata' already exists"
          gh label create "unlocked" --color "28a745" --description "Kata unlocked and available" 2>/dev/null || echo "Label 'unlocked' already exists"
          
          echo "✅ Labels ready"

      - name: Extract event data
        id: event
        run: |
          echo "completed_kata=${{ github.event.client_payload.completed_kata }}" >> $GITHUB_OUTPUT
          echo "kata_name=${{ github.event.client_payload.kata_name }}" >> $GITHUB_OUTPUT
          
          echo "✅ Kata ${{ github.event.client_payload.completed_kata }} completed: ${{ github.event.client_payload.kata_name }}"
      
      - name: Calculate next kata
        id: next
        env:
          COMPLETED: ${{ steps.event.outputs.completed_kata }}
        run: |
          NEXT_NUM=$((10#$COMPLETED + 1))
          NEXT_KATA=$(printf "%02d" $NEXT_NUM)
          echo "next_kata=$NEXT_KATA" >> $GITHUB_OUTPUT
          
          # Map kata numbers to names
          case $NEXT_KATA in
            "02") KATA_NAME="calculator" ;;
            "03") KATA_NAME="leapyear" ;;
            "04") KATA_NAME="romannumerals" ;;
            "05") KATA_NAME="bowlinggame" ;;
            *) KATA_NAME="" ;;
          esac
          
          if [ -n "$KATA_NAME" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "kata_name=$KATA_NAME" >> $GITHUB_OUTPUT
            echo "🔓 Unlocking Kata #$NEXT_KATA: $KATA_NAME"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "🎓 No more katas available. All katas completed!"
          fi
      
      - name: Download next kata definition
        if: steps.next.outputs.exists == 'true'
        env:
          NEXT_KATA: ${{ steps.next.outputs.next_kata }}
          KATA_NAME: ${{ steps.next.outputs.kata_name }}
          REPO_OWNER: ${{ github.repository_owner }}
        run: |
          KATA_FILE="kata-$NEXT_KATA-$KATA_NAME.md"
          echo "📥 Downloading kata definition: $KATA_FILE"
          
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://raw.githubusercontent.com/$REPO_OWNER/tdd-katas-progressive-template/master/.github/kata-definitions/$KATA_FILE" \
            -o kata-definition.md
          
          if [ ! -f kata-definition.md ]; then
            echo "❌ Failed to download kata definition"
            exit 1
          fi
          
          mkdir -p "katas/$NEXT_KATA-$KATA_NAME"
          mv kata-definition.md "katas/$NEXT_KATA-$KATA_NAME/README.md"
          
          echo "✅ Kata definition saved to katas/$NEXT_KATA-$KATA_NAME/README.md"
      
      - name: Sync workflows and definitions from template
        if: steps.next.outputs.exists == 'true'
        env:
          REPO_OWNER: ${{ github.repository_owner }}
        run: |
          echo "🔄 Syncing latest workflows and kata definitions from template..."
          
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Add template remote (now public)
          git remote add template https://github.com/$REPO_OWNER/tdd-katas-progressive-template.git || true
          git fetch template master
          
          # Sync workflows
          echo "📥 Syncing workflows..."
          git checkout template/master -- .github/workflows/ || echo "⚠️ No workflow changes to sync"
          
          # Sync kata definitions (all available katas)
          echo "📥 Syncing kata definitions..."
          git checkout template/master -- .github/kata-definitions/ || echo "⚠️ No kata definition changes to sync"
          
          # Check if there are changes
          if git diff --staged --quiet; then
            echo "✅ Already up to date with template"
          else
            git commit -m "🔄 Sync workflows and kata definitions from template" \
              -m "Automatically synced before unlocking next kata to ensure latest version."
            git push origin ${{ github.ref_name }}
            echo "✅ Template sync completed and pushed to ${{ github.ref_name }}"
          fi
          
          # Remove template remote
          git remote remove template
      
      - name: Create branch for next kata
        if: steps.next.outputs.exists == 'true'
        id: create_branch
        env:
          NEXT_KATA: ${{ steps.next.outputs.next_kata }}
          KATA_NAME: ${{ steps.next.outputs.kata_name }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          BRANCH_NAME="kata-$NEXT_KATA-$KATA_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          echo "🌿 Creating branch: $BRANCH_NAME"
          
          git fetch origin ${{ github.ref_name }}
          git checkout -b $BRANCH_NAME origin/${{ github.ref_name }}
          
          git add "katas/$NEXT_KATA-$KATA_NAME/"
          
          git commit -m "🔓 Unlock Kata #$NEXT_KATA: $KATA_NAME" \
            -m "This kata has been automatically unlocked after completing the previous kata." \
            -m "Read the instructions in katas/$NEXT_KATA-$KATA_NAME/README.md and start implementing following TDD principles."
          
          git push -u origin $BRANCH_NAME
          
          echo "✅ Branch '$BRANCH_NAME' created and pushed!"
      
      - name: Create Pull Request
        if: steps.next.outputs.exists == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_KATA: ${{ steps.next.outputs.next_kata }}
          KATA_NAME: ${{ steps.next.outputs.kata_name }}
          BRANCH_NAME: ${{ steps.create_branch.outputs.branch_name }}
          COMPLETED_KATA: ${{ steps.event.outputs.completed_kata }}
        run: |
          echo "## 🎉 Congratulations!" > pr-body.md
          echo "" >> pr-body.md
          echo "You have successfully completed the previous kata!" >> pr-body.md
          echo "" >> pr-body.md
          echo "### 🔓 New Kata Unlocked" >> pr-body.md
          echo "" >> pr-body.md
          echo "**Kata #$NEXT_KATA**: $KATA_NAME" >> pr-body.md
          echo "" >> pr-body.md
          echo "### 🚀 How to Start" >> pr-body.md
          echo "" >> pr-body.md
          echo '```bash' >> pr-body.md
          echo "git fetch origin" >> pr-body.md
          echo "git checkout $BRANCH_NAME" >> pr-body.md
          echo "cat katas/$NEXT_KATA-$KATA_NAME/README.md" >> pr-body.md
          echo '```' >> pr-body.md
          echo "" >> pr-body.md
          echo "### 📊 Your Progress" >> pr-body.md
          echo "" >> pr-body.md
          echo "- ✅ Completed: $COMPLETED_KATA katas" >> pr-body.md
          echo "- 🎯 Current: Kata #$NEXT_KATA" >> pr-body.md
          echo "" >> pr-body.md
          echo "**Good luck!** 🚀" >> pr-body.md
          
          # Create PR with labels (labels should exist now)
          gh pr create \
            --title "🎯 Kata $NEXT_KATA: $KATA_NAME - UNLOCKED! 🔓" \
            --body-file pr-body.md \
            --base ${{ github.ref_name }} \
            --head $BRANCH_NAME \
            --label "kata" \
            --label "unlocked"
          
          echo "✅ Pull Request created successfully!"
      
      - name: Completion message
        if: steps.next.outputs.exists == 'false'
        run: |
          echo "========================================"
          echo "🎓 ALL KATAS COMPLETED! 🏆"
          echo "========================================"
          echo ""
          echo "🎉 Congratulations! You've completed all available katas!"
          echo ""
          echo "You are now a TDD master! 🥋"
          echo ""
          echo "📊 Final Stats:"
          echo "   - Total katas completed: ${{ steps.event.outputs.completed_kata }}"
          echo "   - TDD skills: Expert level 🌟"
          echo ""
          echo "🎯 What's next?"
          echo "   - Review your solutions"
          echo "   - Refactor for even better code"
          echo "   - Help others learn TDD"
          echo "   - Explore advanced katas"
          echo ""
          echo "🏅 Achievement Unlocked: TDD Journey Complete!"
          echo "========================================"
      
      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.next.outputs.exists }}" == "true" ]; then
            echo "✅ Kata #${{ steps.next.outputs.next_kata }} unlocked successfully!"
            echo "🌿 Branch: ${{ steps.create_branch.outputs.branch_name }}"
            echo "📬 PR created with instructions"
            echo ""
            echo "👉 Student should run: git fetch origin && git checkout ${{ steps.create_branch.outputs.branch_name }}"
          else
            echo "🎓 All katas completed - no more to unlock"
          fi
