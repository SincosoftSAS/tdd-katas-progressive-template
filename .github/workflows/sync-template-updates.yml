name: üîÑ Sync Template Updates to Students

on:
  workflow_dispatch:  # Permite ejecutar manualmente
    inputs:
      assignment_prefix:
        description: 'Prefijo de repos de estudiantes (ej: tdd-katas)'
        required: true
        default: 'tdd-katas'
      pr_title:
        description: 'T√≠tulo del PR'
        required: true
        default: 'üîß Template Updates - Sistema de Katas Mejorado'
      dry_run:
        description: 'Solo mostrar qu√© se har√≠a (no crear PRs)'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  pull-requests: write
  repository-projects: write

jobs:
  sync-to-students:
    runs-on: ubuntu-latest
    
    steps:
      - name: üîç Checkout template repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üìã Get student repositories
        id: get-repos
        run: |
          echo "üîç Buscando repositorios de estudiantes..."
          
          # Obtener lista de repos que empiecen con el prefijo
          REPOS=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/repos?per_page=100&type=all" \
            | jq -r '.[] | select(.name | startswith("${{ inputs.assignment_prefix }}")) | .name')
          
          if [ -z "$REPOS" ]; then
            echo "‚ùå No se encontraron repositorios con prefijo '${{ inputs.assignment_prefix }}'"
            exit 1
          fi
          
          REPO_COUNT=$(echo "$REPOS" | wc -l)
          echo "‚úÖ Encontrados $REPO_COUNT repositorios de estudiantes"
          
          # Guardar lista para el siguiente step
          echo "$REPOS" > student_repos.txt
          echo "repo_count=$REPO_COUNT" >> $GITHUB_OUTPUT
          echo "repos_found=true" >> $GITHUB_OUTPUT

      - name: üåø Create sync branch
        id: create-branch
        run: |
          BRANCH_NAME="template-sync-$(date +%Y%m%d-%H%M%S)"
          
          echo "üåø Creando rama: $BRANCH_NAME"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "‚úÖ Rama creada: $BRANCH_NAME"

      - name: üì§ Create PRs for students
        if: inputs.dry_run == false
        run: |
          BRANCH_NAME="${{ steps.create-branch.outputs.branch_name }}"
          TOTAL_REPOS=${{ steps.get-repos.outputs.repo_count }}
          CREATED_PRS=0
          FAILED_PRS=0
          
          echo "üì§ Creando PRs en $TOTAL_REPOS repositorios..."
          echo ""
          
          while IFS= read -r repo_name; do
            if [ -z "$repo_name" ]; then continue; fi
            
            echo "üîÑ Procesando: $repo_name"
            
            # Intentar crear PR
            PR_RESPONSE=$(curl -s -w "%{http_code}" \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository_owner }}/$repo_name/pulls" \
              -d "{
                \"title\": \"${{ inputs.pr_title }}\",
                \"body\": \"## üîß Actualizaciones del Template\n\n### ‚úÖ Mejoras Incluidas:\n- **Kata-1 limpio**: Eliminados archivos innecesarios (Class1.cs, duplicados)\n- **Kata-2 corregido**: Estructura .NET completa y funcional\n- **Tests optimizados**: Solo 2 ejemplos por kata para mejor TDD\n- **Server tests**: Sistema de evaluaci√≥n autom√°tica mejorado\n- **Workflow corregido**: Sintaxis de desbloqueo autom√°tico arreglada\n\n### üéØ Beneficios:\n- Mejor experiencia de aprendizaje TDD\n- Sistema de desbloqueo m√°s confiable\n- Evaluaci√≥n autom√°tica mejorada\n- Menos archivos confusos\n\n### üìã Acci√≥n Requerida:\n**Acepta este PR** para recibir las mejoras del sistema.\n\n**Nota**: Tus cambios actuales se mantienen. Solo se actualizan archivos del template.\n\n---\n*Generado autom√°ticamente por GitHub Actions*\",
                \"head\": \"${{ github.repository_owner }}:$BRANCH_NAME\",
                \"base\": \"main\"
              }")
            
            HTTP_CODE="${PR_RESPONSE: -3}"
            PR_BODY="${PR_RESPONSE%???}"
            
            if [ "$HTTP_CODE" = "201" ]; then
              PR_URL=$(echo "$PR_BODY" | jq -r '.html_url')
              echo "  ‚úÖ PR creado: $PR_URL"
              CREATED_PRS=$((CREATED_PRS + 1))
            elif [ "$HTTP_CODE" = "422" ]; then
              echo "  ‚ö†Ô∏è  PR ya existe o no hay cambios"
            else
              echo "  ‚ùå Error ($HTTP_CODE): $(echo "$PR_BODY" | jq -r '.message // "Error desconocido"')"
              FAILED_PRS=$((FAILED_PRS + 1))
            fi
            
            # Peque√±a pausa para evitar rate limiting
            sleep 1
            
          done < student_repos.txt
          
          echo ""
          echo "üìä Resumen de sincronizaci√≥n:"
          echo "  - Repositorios procesados: $TOTAL_REPOS"
          echo "  - PRs creados exitosamente: $CREATED_PRS"
          echo "  - PRs fallidos: $FAILED_PRS"
          echo "  - Rama utilizada: $BRANCH_NAME"

      - name: üîç Dry run - Show what would happen
        if: inputs.dry_run == true
        run: |
          BRANCH_NAME="${{ steps.create-branch.outputs.branch_name }}"
          TOTAL_REPOS=${{ steps.get-repos.outputs.repo_count }}
          
          echo "üîç DRY RUN - Mostrando qu√© se har√≠a:"
          echo ""
          echo "üìä Configuraci√≥n:"
          echo "  - Prefijo: ${{ inputs.assignment_prefix }}"
          echo "  - Rama: $BRANCH_NAME"
          echo "  - T√≠tulo PR: ${{ inputs.pr_title }}"
          echo "  - Repositorios encontrados: $TOTAL_REPOS"
          echo ""
          echo "üìã Repositorios que recibir√≠an PRs:"
          
          while IFS= read -r repo_name; do
            if [ -z "$repo_name" ]; then continue; fi
            echo "  - ${{ github.repository_owner }}/$repo_name"
          done < student_repos.txt
          
          echo ""
          echo "üí° Para ejecutar realmente, vuelve a correr sin 'dry_run'"

      - name: üìã Final summary
        run: |
          echo "üéâ Sincronizaci√≥n completada!"
          echo ""
          echo "üìã Pr√≥ximos pasos para estudiantes:"
          echo "  1. Recibir√°n notificaci√≥n de nuevo PR"
          echo "  2. Pueden revisar los cambios propuestos"
          echo "  3. Al aceptar el PR, recibir√°n todas las mejoras"
          echo "  4. Su progreso actual se mantiene intacto"
          echo ""
          echo "üîß Mejoras incluidas en los PRs:"
          echo "  - Kata-1 limpio (sin archivos innecesarios)"
          echo "  - Kata-2 con estructura .NET completa"
          echo "  - Tests reducidos a 2 ejemplos por kata"
          echo "  - Sistema de evaluaci√≥n autom√°tica mejorado"