name: üîç Debug Permissions

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  actions: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: üîß Setup GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: üîç Check permissions
        run: |
          echo "üîç Verificando permisos..."
          
          # Buscar espec√≠ficamente repos katas-tdd
          echo "üìã Repos katas-tdd encontrados:"
          gh repo list ${{ github.repository_owner }} \
            --json name \
            --jq '.[] | select(.name | contains("katas-tdd")) | select(.name != "tdd-katas-progressive-template") | select(.name | endswith("-template") | not) | .name' \
            > student_repos.txt
          
          TOTAL=$(cat student_repos.txt | wc -l)
          echo "‚úÖ Total encontrados: $TOTAL repos"
          
          cat student_repos.txt | head -5 | while read repo; do
            [ -n "$repo" ] && echo "  üìÅ ${{ github.repository_owner }}/$repo"
          done
          
          echo ""
          echo "üîë Token info:"
          gh auth status
          
          echo ""
          echo "üë§ Usuario actual:"
          gh api user --jq '.login'
          
          echo ""
          echo "üè¢ Permisos en organizaci√≥n:"
          gh api "orgs/${{ github.repository_owner }}/members" --jq '.[].login' | head -3 || echo "No acceso a lista de miembros"

      - name: üéØ Test specific student repos
        run: |
          echo "üéØ Probando acceso a repos estudiantes espec√≠ficos..."
          
          # Probar con los primeros 3 repos encontrados
          cat student_repos.txt | head -3 | while read repo; do
            [ -z "$repo" ] && continue
            
            echo ""
            echo "ÔøΩ Probando: $repo"
            echo "================================"
            
            # Verificar acceso b√°sico al repo
            if gh repo view "${{ github.repository_owner }}/$repo" --json name,owner,visibility,permissions >/dev/null 2>&1; then
              echo "  ‚úÖ Acceso de lectura: OK"
              
              # Verificar permisos espec√≠ficos
              PERMS=$(gh repo view "${{ github.repository_owner }}/$repo" --json permissions --jq '.permissions')
              echo "  ÔøΩ Permisos: $PERMS"
              
              # Intentar verificar si puede crear PRs
              if echo "$PERMS" | grep -q "\"push\":true"; then
                echo "  ‚úÖ Permisos de push: OK"
              else
                echo "  ‚ùå Sin permisos de push"
              fi
              
              if echo "$PERMS" | grep -q "\"pull\":true"; then
                echo "  ‚úÖ Permisos de pull: OK"
              else
                echo "  ‚ùå Sin permisos de pull"
              fi
              
            else
              echo "  ‚ùå Sin acceso al repo"
            fi
            
            sleep 1
          done
          
          echo ""
          echo "üìä Resumen del diagn√≥stico completado"
          
          echo ""
          echo "üîç An√°lisis de token GitHub:"
          echo "Token scope: ${{ github.token }}" | cut -c1-20
          echo "Repo actual: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"