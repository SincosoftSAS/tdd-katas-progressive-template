name: Grade Kata

on:
  push:
    branches:
      - 'master'
      - 'main'

permissions:
  contents: write
  pull-requests: write
  statuses: write
  issues: write

jobs:
  grade:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get current kata
        id: kata
        run: |
          CURRENT=$(jq -r '.current_kata' .github/progress.json)
          echo "number=$CURRENT" >> $GITHUB_OUTPUT
          echo "üéØ Working on Kata $CURRENT"

      - name: Set commit status to pending
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}" \
            -d '{
              "state": "pending",
              "description": "üß™ Running TDD tests...",
              "context": "kata-tests"
            }'

      - name: Run tests
        id: test
        run: |
          cd katas/kata-${{ steps.kata.outputs.number }}
          
          echo "üî® Building..."
          dotnet build --verbosity quiet
          
          echo "üß™ Running tests..."
          if dotnet test --verbosity quiet --logger "console;verbosity=detailed" > ../../test-output.txt 2>&1; then
            echo "result=success" >> $GITHUB_OUTPUT
            echo "‚úÖ All tests passed!"
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            echo "‚ùå Some tests failed"
            cat ../../test-output.txt
          fi

      - name: Update progress on success
        if: steps.test.outputs.result == 'success'
        run: |
          CURRENT=${{ steps.kata.outputs.number }}
          NEXT=$((CURRENT + 1))
          
          # Update progress.json
          jq ".current_kata = $NEXT | .completed_katas += [$CURRENT] | .last_updated = \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"" .github/progress.json > temp.json
          mv temp.json .github/progress.json
          
          # Commit changes
          git config user.name "TDD Bot"
          git config user.email "tdd-bot@github.com"
          git add .github/progress.json
          git commit -m "Complete Kata $CURRENT" || true
          git push origin ${{ github.ref_name }}
          
          echo "üìä Progress updated: Kata $CURRENT ‚Üí Kata $NEXT"

      - name: Unlock next kata
        if: steps.test.outputs.result == 'success'
        run: |
          CURRENT=${{ steps.kata.outputs.number }}
          NEXT=$((CURRENT + 1))
          
          if [ -d ".github/kata-templates/kata-$NEXT" ] && [ ! -d "katas/kata-$NEXT" ]; then
            echo "üîì Unlocking Kata $NEXT..."
            
            # Copy template to working directory
            cp -r ".github/kata-templates/kata-$NEXT" "katas/"
            
            # Commit new kata
            git add "katas/kata-$NEXT"
            git commit -m "Unlock Kata $NEXT" || true
            git push origin ${{ github.ref_name }}
            
            echo "‚úÖ Kata $NEXT unlocked!"
          else
            echo "üèÜ All katas completed or next kata already exists!"
          fi

      - name: Set final commit status
        if: always()
        run: |
          if [ "${{ steps.test.outputs.result }}" == "success" ]; then
            STATE="success"
            DESC="‚úÖ Tests passed! Kata ${{ steps.kata.outputs.number }} completed"
          else
            STATE="failure"  
            DESC="‚ùå Tests failed - check logs for details"
          fi
          
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}" \
            -d "{
              \"state\": \"$STATE\",
              \"description\": \"$DESC\",
              \"context\": \"kata-tests\",
              \"target_url\": \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
            }"

      - name: Create failure issue
        if: steps.test.outputs.result == 'failure'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          KATA_NUM=${{ steps.kata.outputs.number }}
          
          # Create issue with simple body
          gh issue create \
            --title "‚ùå Kata $KATA_NUM: Tests Failed" \
            --body "Your tests didn't pass. Run 'dotnet test' in katas/kata-$KATA_NUM to see details. Follow TDD cycle and push again!" \
            --assignee "${{ github.actor }}"