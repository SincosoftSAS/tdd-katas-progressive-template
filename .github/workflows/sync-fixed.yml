name: 🔄 Sync to Students (Fixed)

on:
  workflow_dispatch:
    inputs:
      assignment_prefix:
        description: 'Prefijo de repos estudiantes'
        required: true
        default: 'tdd-katas'
      dry_run:
        description: 'Solo mostrar repos (no crear PRs)'
        type: boolean
        default: true

permissions:
  contents: read
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🔍 Find student repos
        id: find
        run: |
          echo "🔍 Buscando repos con prefijo: ${{ inputs.assignment_prefix }}"
          
          # Obtener repos de la org, filtrar por prefijo y excluir template
          curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/repos?per_page=100" \
            | jq -r '.[] | select(.name | startswith("${{ inputs.assignment_prefix }}")) | select(.name != "tdd-katas-progressive-template") | .name' \
            > student_repos.txt
          
          TOTAL=$(cat student_repos.txt | wc -l)
          echo "✅ Encontrados: $TOTAL repos"
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          
          if [ $TOTAL -eq 0 ]; then
            echo "❌ No se encontraron repos de estudiantes"
            exit 1
          fi

      - name: 📋 Show repos (dry run)
        if: inputs.dry_run
        run: |
          echo "🔍 DRY RUN - Repos que recibirían PRs:"
          echo "======================================"
          cat student_repos.txt | while read repo; do
            [ -n "$repo" ] && echo "  📁 ${{ github.repository_owner }}/$repo"
          done
          echo ""
          echo "📊 Total: ${{ steps.find.outputs.total }} repositorios"
          echo ""
          echo "💡 Para ejecutar: vuelve a correr con dry_run=false"

      - name: 📤 Create PRs
        if: inputs.dry_run == false
        run: |
          echo "📤 Creando PRs en ${{ steps.find.outputs.total }} repositorios..."
          
          SUCCESS=0
          FAILED=0
          
          cat student_repos.txt | while read repo; do
            [ -z "$repo" ] && continue
            
            echo "🔄 $repo"
            
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository_owner }}/$repo/pulls" \
              -d '{
                "title": "🔧 Template Updates - Sistema Mejorado",
                "body": "## 🔧 Actualizaciones del Template\n\n### ✅ Mejoras:\n- Kata-1 limpio (sin archivos extra)\n- Kata-2 con estructura .NET completa\n- Tests optimizados (2 ejemplos por kata)\n- Workflow de desbloqueo corregido\n\n### 📋 Acción:\n**Acepta este PR** para recibir las mejoras.\n\n*Tu progreso se mantiene intacto.*",
                "head": "${{ github.repository_owner }}:${{ github.ref_name }}",
                "base": "main"
              }')
            
            case $HTTP_CODE in
              201) echo "  ✅ PR creado"; SUCCESS=$((SUCCESS + 1)) ;;
              422) echo "  ⚠️  Ya existe o sin cambios" ;;
              *) echo "  ❌ Error $HTTP_CODE"; FAILED=$((FAILED + 1)) ;;
            esac
            
            sleep 1
          done
          
          echo ""
          echo "📊 Resumen: $SUCCESS exitosos, $FAILED fallidos"

      - name: 🎉 Done
        run: |
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "🔍 Dry run completado - revisa los repos encontrados arriba"
          else
            echo "🎉 Sincronización completada!"
            echo "Los estudiantes recibirán notificaciones de PR"
          fi